<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="
  		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd  
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">  
  
  <!-- 1、使用配置，实现IOC -->
  <!-- <bean id="" class="">
  	<property name="" value=""/>
  </bean> -->
  
  <!-- 2、使用注解，实现IOC -->
  <!--<context:component-scan>会默认激活<context:annotation-config>功能,即可以使用@Resource
  	  若不配置<context:component-scan>，则需要<context:annotation-config/>才可以使用@Resource-->  	     
  <context:component-scan base-package="com.yscxsss.entity,com.yscxsss.service.*" />
  
  <!-- 3、使用配置，实现AOP日志输出 -->
  <!-- <aop:config> -->
  	<!-- 配置切入点，即配置规则：谁符合该规则，谁就会执行切面AOP的日志功能 ，可重用-->
  	<!-- <aop:pointcut expression="execution(* com.yscxsss.service..*.*(..))" id="pointcut"/> -->
  	<!-- 配置切面:增强所在的类对象 -->
  	<!-- <aop:aspect ref="theLogger"> -->
  		<!-- 配置前置增强 -->
  		<!-- <aop:before method="before" pointcut-ref="pointcut"/> -->
  		<!-- 配置后置增强，注意有返回值，后置增强会拿到该返回值result -->
  		<!-- <aop:after-returning method="afterReturning" pointcut-ref="pointcut" returning="result"/> -->
  		<!-- 配置异常抛出增强 -->
  		<!-- <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut"/> -->
  		<!-- 配置最终增强 -->
  		<!-- <aop:after method="after" pointcut-ref="pointcut"/> -->
  		
  		<!-- 配置环绕增强 -->
  		<!-- <aop:around method="around" pointcut-ref="pointcut"/> -->
  	<!-- </aop:aspect> -->
  <!-- </aop:config> -->
  
  <!-- 4、使用注解，实现AOP，该句会开启对@AspectJ的支持，否则面向切面的各种注解无法执行 -->
  <aop:aspectj-autoproxy />
  
</beans> 
### DEBUG < INFO < WARN < ERROR < FATAL
### 设置日志级别，控制台，两个日志，一个mylog，一个err
### 配置的值不要有多余的空格，否则报错
log4j.rootLogger=debug,console,mylog,err,dailyFile


###  将日志信息，输出到控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
### System.err为红色,System.out为黑色
log4j.appender.console.Target=System.err
log4j.appender.console.Threshold=info
log4j.appender.console.layout=org.apache.log4j.PatternLayout
### 控制台不需要输入年月日的，只需要时分秒就好
### %d{HH:mm:ss} - %5p - %c{1}:%L - %m%n中的：以及-都表示固定格式
### %5p表示日志级别，%d{HH:mm:ss}表示输出时间，%c{1}表示类，%l表示类全名，%L表示类全名对应的编号
log4j.appender.console.layout.ConversionPattern=%d{HH:mm:ss}-%5p - %c{1} - %m%n


### 将info级别的信息，输出到 yscxsss.log
log4j.appender.mylog = org.apache.log4j.DailyRollingFileAppender
log4j.appender.mylog.File=${yscxSSM.root}/WEB-INF/logs/yscxsss.log
log4j.appender.mylog.Append=true
log4j.appender.mylog.Threshold=info
log4j.appender.mylog.Encoding=UTF-8
log4j.appender.mylog.ImmediateFlush = true
log4j.appender.mylog.layout=org.apache.log4j.PatternLayout
log4j.appender.mylog.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}-%5p - %c{1} - %m%n
											           

### 将error级别的信息，输出到 error.log中
log4j.appender.err = org.apache.log4j.DailyRollingFileAppender
log4j.appender.err.File=${yscxSSM.root}/WEB-INF/logs/error.log
### 将消息追加到指定文件中，默认为true，false指将消息覆盖指定的文件内容 
log4j.appender.err.Append=true
### 指定日志消息的输出最低层次，此处修改输出日志级别
log4j.appender.err.Threshold=error
### 日志文件的编码方式  
log4j.appender.err.Encoding=UTF-8
### 所有的消息都会被立即输出,默认值是true
log4j.appender.err.ImmediateFlush = true
log4j.appender.err.layout=org.apache.log4j.PatternLayout
log4j.appender.err.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}-%5p - %c{1} - %m%n


### 输出总结性日志(每日日志)
### 将警告信息，按照每天输出，使用按DatePattern输出到文件 ，该文件第二天才会输出，而不是马上输出 
log4j.appender.dailyFile =org.apache.log4j.DailyRollingFileAppender
log4j.appender.dailyFile.layout =org.apache.log4j.PatternLayout
log4j.appender.dailyFile.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss}-%5p - %c{1} - %m%n
log4j.appender.dailyFile.Threshold =warn
log4j.appender.dailyFile.ImmediateFlush =TRUE
log4j.appender.dailyFile.Append =TRUE
###	以下两句配合输出文件的文件名，daily是文件的前缀，_yyyy-MM-dd.log是后缀，如：daily_2018-05-01.log
log4j.appender.dailyFile.File =${yscxSSM.root}/WEB-INF/logs/daily
log4j.appender.dailyFile.DatePattern ='_'yyyy-MM-dd'.log'
### '.'yyyy-ww:每周滚动一次文件,即每周产生一个新的文件 , 还可以按用以下参数:  
### '.'yyyy-MM:每月   
### '.'yyyy-ww:每周   
### '.'yyyy-MM-dd:每天   
### '.'yyyy-MM-dd-a:每天两次   
### '.'yyyy-MM-dd-HH:每小时   
### '.'yyyy-MM-dd-HH-mm:每分钟   
log4j.appender.dailyFile.Encoding =UTF-8


###########以下输出中，发送日志到邮箱失败，将日志记录到数据库中成功，但控制台报错,以下但是不使用################
### 设定文件大小输出到文件   
log4j.appender.sizeFile =org.apache.log4j.RollingFileAppender
log4j.appender.sizeFile.layout =org.apache.log4j.PatternLayout
log4j.appender.sizeFile.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss}-%5p - %c{1} - %m%n
log4j.appender.sizeFile.Threshold =info
log4j.appender.sizeFile.ImmediateFlush =TRUE
log4j.appender.sizeFile.Append =TRUE
log4j.appender.sizeFile.File =${yscxSSM.root}/WEB-INF/logs/size.log
### 100KB:后缀可以是KB,MB,GB.在日志文件到达该大小时,将会自动滚动
### 产生如:size.log.1,size.log.2这样的文件，可以用text打开，它就是日志文件   
log4j.appender.sizeFile.MaxFileSize =20MB
### 指定可以产生的滚动文件的最大数   
log4j.appender.sizeFile.MaxBackupIndex =100
log4j.appender.sizeFile.Encoding =UTF-8


#用Email发送日志，需要mail.jar,activation.jar的支持,不过，似乎没有成功，但不报错
log4j.appender.logMail = org.apache.log4j.net.SMTPAppender
log4j.appender.logMail.layout = org.apache.log4j.HTMLLayout
log4j.appender.logMail.layout.LocationInfo =TRUE
log4j.appender.logMail.layout.Title =yscxsss Mail LogFile
log4j.appender.logMail.Threshold =info
log4j.appender.logMail.SMTPDebug =FALSE
log4j.appender.logMail.SMTPHost =smtp.qq.com
log4j.appender.logMail.From =277090250@qq.com
log4j.appender.logMail.To =277090250@qq.com
log4j.appender.logMail.SMTPUsername =277090250@qq.com
log4j.appender.logMail.SMTPPassword =Cll.7269190#
log4j.appender.logMail.Subject = Log4j报错提示
#log4j.appender.logMail.BufferSize = 1024
#log4j.appender.logMail.SMTPAuth = TRUE
  
  
#将日志登录到MySQL数据库 ，能将数据插入到数据库中，但控制台报错了
log4j.appender.logDB = org.apache.log4j.jdbc.JDBCAppender
log4j.appender.logDB.layout = org.apache.log4j.PatternLayout
log4j.appender.logDB.Driver = com.mysql.jdbc.Driver
log4j.appender.logDB.URL = jdbc:mysql://localhost:3306/yscx?useSSL\=false&useUnicode\=true&characterEncoding\=utf-8
log4j.appender.logDB.User = root
log4j.appender.logDB.Password = 123456
log4j.appender.logDB.Sql =insert into log4j (projectName,createDate,level,category,line,allCategory,message)values('yscxsss','%d{yyyy-MM-dd HH:mm:ss}','%p','%c','%L','%l','%m')  




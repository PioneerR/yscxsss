<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns="http://java.sun.com/xml/ns/javaee" 
xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" 
id="WebApp_ID" version="3.0">
  <display-name>yscxSSM</display-name>
 
  <!-- 1、欢迎页面首页 -->
  <welcome-file-list>
    <welcome-file>/WEB-INF/jsp/index.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 2、上下文共享参数 -->
  <context-param>
  	<param-name>uploadPath</param-name>
  	<param-value>/WebRoot/images</param-value>
  </context-param>
  
  <!-- 3、配置log4j：必须放在ContextLoaderListener监听器之前加载，否则报警告 -->
  <context-param>
  	<param-name>log4jConfigLocation</param-name>
  	<param-value>classpath:log4j.properties</param-value>
  </context-param>
  <listener>
  	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>  
  <!-- 配置log4j的路径 -->
  <context-param>
	<param-name>webAppRootKey</param-name>
	<param-value>yscxSSM.root</param-value>
  </context-param>
  
  <!-- 4、配置字符编码filter -->
  <filter>
  	<filter-name>characterEncodingFilter</filter-name>
  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  	<init-param>
  		<!-- param-name为固定值，不能随便写 -->
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  	<init-param>
  		<!-- param-name为固定值，不能随便写 -->
  		<param-name>forceEncoding</param-name>
  		<param-value>true</param-value>
  	</init-param>
  </filter>
  <filter-mapping>
  	<filter-name>characterEncodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 5、加载静态文件，必须配置在DispatcherServlet之前 -->
  <!--如果你的DispatcherServlet拦截"/"，为了实现REST风格，拦截了所有的请求，那么同时对*.js,*.jpg等静态文件的访问也就被拦截了。-->  
  <!--方案一：激活Tomcat的defaultServlet来处理静态文件-->  
  <!--要写在DispatcherServlet的前面， 让 defaultServlet先拦截请求，这样请求就不会进入Spring了，我想性能是最好的吧。-->  
  <!-- 方案二:使用springmvc-servlet.xml加载静态资源 -->
  <!-- <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.css</url-pattern>  
  </servlet-mapping>  
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.swf</url-pattern>  
  </servlet-mapping>  
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.gif</url-pattern>  
  </servlet-mapping>  
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.jpg</url-pattern>  
  </servlet-mapping>  
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.png</url-pattern>  
  </servlet-mapping> 
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.ico</url-pattern>  
  </servlet-mapping> 
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.js</url-pattern>  
  </servlet-mapping>  
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.html</url-pattern>  
  </servlet-mapping>  
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.xml</url-pattern>  
  </servlet-mapping>  
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.json</url-pattern>  
  </servlet-mapping>  
  <servlet-mapping>  
    <servlet-name>default</servlet-name>  
    <url-pattern>*.map</url-pattern>  
  </servlet-mapping> -->
  
  <!-- 6、配置Spring -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:applicationContext-*.xml</param-value>
  </context-param>
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 7、配置SpringMVC -->
  <servlet>
  	<servlet-name>springmvc</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:springmvc-servlet.xml</param-value>
  	</init-param>
  	<load-on-startup>1</load-on-startup>
  </servlet>  
  <servlet-mapping>
  	<servlet-name>springmvc</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <!--8、配置异常：当系统出现404错误，跳转到页面404.jsp-->  
  <error-page> 
    <error-code>404</error-code>  
    <location>/404.jsp</location>  
  </error-page>  
  <!--当系统出现java.lang.NullPointerException，跳转到页面500.jsp-->
  <error-page>   
    <exception-type>java.lang.NullPointerException</exception-type>  
    <location>/500.jsp</location>  
  </error-page> 
  
  <!--9、配置会话会话超时配置，单位分钟--> 
  <session-config>  
     <session-timeout>360</session-timeout>  
  </session-config> 
  
</web-app>